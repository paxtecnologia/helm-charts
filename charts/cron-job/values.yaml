name: "example-cron-job"
schedule: "*/5 * * * *"
# successfulJobsHistoryLimit: 3
# failedJobsHistoryLimit: 2
# ttlSecondsAfterFinished: 100
# concurrencyPolicy: "Replace" # Allow: Permite varias execução, Replace: Se um novo cronjob for iniciado o antigo e substituido, Forbid: So e possivel um novo cronjob após o termino do anterior 
# suspend: false

labels:
  AppVersion: 0.1.0

serviceAccount:
  create: true
  # annotations: {}
  # name: ""

app:
  version: 0.0


image:
  pullPolicy: IfNotPresent
  repository: "testRepo"
  name: "testName"
  tag: "testTag"

env: 
  - name: TEST_ENV
    valueFrom:
      fieldRef:
        fieldPath: test_env

securityContext: {}

spec:
  ttlSecondsAfterFinishedDisabled: false
  ttlSecondsAfterFinished: 180
  failedJobsHistoryLimit: 5
  successfulJobsHistoryLimit: 5
  
jobTemplate:
  backoffLimit: 5
  parallelism: 1
  completions: 1
  activeDeadlineSeconds: 100

containersSecondary: |
  - name: "example-container"
    image: "busybox"
    args: ["echo", "Hello World"]
    imagePullPolicy: Always

secret:
  enable: false

configMap:
  enable: false

secretProviderClass:
  enable: false

envFrom:
  existingConfigMaps:
    enable: false
  existingSecrets:
    enable: false
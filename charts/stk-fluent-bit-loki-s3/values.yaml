# O helm do fluent-bit não aceita uso de alias, tem que manter o nome original
fluent-bit:
  resources:
    requests:
      cpu: 25m
      memory: 30Mi
    limits:
      cpu: 100m
      memory: 36Mi
  config:
    inputs: |
      [INPUT]
          Name tail
          Path /var/log/containers/*.log
          multiline.parser docker, cri
          Tag kube.<namespace_name>.<pod_name>.<container_name>
          Mem_Buf_Limit 10MB
          Skip_Long_Lines Off
          Kubernetes_Meta On    # Habilita metadados do Kubernetes
          Merge_Log On          # Inclui metadados no registro do log
          Labels app            # Extrai o label 'app' especificamente
          K8S-Logging.Parser On # Habilita parsers do Kubernetes
      
      [INPUT]
          Name systemd
          Tag host.kubelet.<hostname>
          Systemd_Filter _SYSTEMD_UNIT=kubelet.service
          Read_From_Tail On
          Strip_Underscores On      # Remove underscores dos campos (opcional)
          DB /var/log/flb_systemd_kubelet.db  # Persistência da posição do log
          Mem_Buf_Limit 10MB     # Evita estouro de memória

    outputs: |
      [OUTPUT]
          Name loki
          Match kube.*
          Host <loki  distributor svc>
          Retry_Limit False
          auto_kubernetes_labels true
          tenant_id <EKS Cluster Name>

      [OUTPUT]
          Name loki
          Match host.*
          Host <loki  distributor svc>
          Retry_Limit False
          auto_kubernetes_labels true
          tenant_id <EKS Cluster Name>

loki:
  loki:
    auth_enabled: false
    schemaConfig:
      configs:
        - from: "2024-04-01"
          store: tsdb
          object_store: s3
          schema: v13
          index:
            prefix: loki_index_
            period: 24h
    storage_config:
      aws:
        region: <S3 BUCKET REGION> # for example, eu-west-2
        bucketnames: <CHUNK BUCKET NAME> # Your actual S3 bucket name, for example, loki-aws-dev-chunks
        s3forcepathstyle: false
    ingester:
      chunk_encoding: snappy
    pattern_ingester:
      enabled: true
    limits_config:
      allow_structured_metadata: true
      volume_enabled: true
      retention_period: 672h # 28 days retention
    compactor:
      retention_enabled: true
      delete_request_store: s3
    ruler:
      enable_api: true
      storage:
        type: s3
        s3:
          region: <S3 BUCKET REGION> # for example, eu-west-2
          bucketnames: <RULER BUCKET NAME> # Your actual S3 bucket name, for example, loki-aws-dev-ruler
          s3forcepathstyle: false
        alertmanager_url: http://prom:9093 # The URL of the Alertmanager to send alerts (Prometheus, Mimir, etc.)

    querier:
      max_concurrent: 4

    storage:
      type: s3
      bucketNames:
        chunks: "<CHUNK BUCKET NAME>" # Your actual S3 bucket name (loki-aws-dev-chunks)
        ruler: "<RULER BUCKET NAME>" # Your actual S3 bucket name (loki-aws-dev-ruler)
        # admin: "<Insert s3 bucket name>" # Your actual S3 bucket name (loki-aws-dev-admin) - GEL customers only
      s3:
        region: <S3 BUCKET REGION> # eu-west-2
        #insecure: false
      # s3forcepathstyle: false

  serviceAccount:
    create: true
    annotations:
      "eks.amazonaws.com/role-arn": "arn:aws:iam::<Account ID>:role/LokiServiceAccountRole" # The service role you created

  deploymentMode: Distributed

  ingester:
    replicas: 3
    zoneAwareReplication:
      enabled: false

  querier:
    replicas: 3
    maxUnavailable: 2

  queryFrontend:
    replicas: 2
    maxUnavailable: 1

  queryScheduler:
    replicas: 2

  distributor:
    replicas: 3
    maxUnavailable: 2
  compactor:
    replicas: 1

  indexGateway:
    replicas: 2
    maxUnavailable: 1

  ruler:
    replicas: 1
    maxUnavailable: 1

  # This exposes the Loki gateway so it can be written to and queried externaly
  gateway:
    service:
      type: ClusterIP

  # Enable minio for storage
  minio:
    enabled: false

  backend:
    replicas: 0
  read:
    replicas: 0
  write:
    replicas: 0

  singleBinary:
    replicas: 0

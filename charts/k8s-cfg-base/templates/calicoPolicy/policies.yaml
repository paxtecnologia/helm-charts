{{- $policies := .Values.calicoPolicy.policies }}
{{- range $name, $config := $policies }}
  {{- range $namespace := $config.namespaces }}
---
apiVersion: crd.projectcalico.org/v1
kind: NetworkPolicy
metadata:
  name: {{ $name }}
  namespace: {{ $namespace }}
spec:
  selector: {{ $config.selector | default "all()" | quote }}
  types:
    - {{ $config.policyType }}
  {{- if eq $config.policyType "Ingress" }}
  ingress:
    - action: {{ $config.action | default "Allow" }}
      {{- if $config.protocol }}
      protocol: {{ $config.protocol }}
      {{- end }}
      {{- if or $config.peerSelector $config.namespaceSelectorLabel $config.internalNamespace }}
      source:
        {{- if $config.peerSelector }}
        selector: {{ $config.peerSelector | quote }}
        {{- else if $config.namespaceSelectorLabel }}
        namespaceSelector: {{ printf "\"kubernetes.io/metadata.name == '%s'\"" (index $config.namespaceSelectorLabel "kubernetes.io/metadata.name") }}
        {{- else if $config.internalNamespace }}
        namespaceSelector: "kubernetes.io/metadata.name == '{{ $namespace }}'"
        {{- end }}
      {{- else }}
      source: {}
      {{- end }}
  {{- end }}
  {{- if eq $config.policyType "Egress" }}
  egress:
    - action: {{ $config.action | default "Allow" }}
      {{- if $config.protocol }}
      protocol: {{ $config.protocol }}
      {{- end }}
      {{- if or $config.peerSelector $config.namespaceSelectorLabel $config.internalNamespace }}
      destination:
        {{- if $config.peerSelector }}
        selector: {{ $config.peerSelector | quote }}
        {{- else if $config.namespaceSelectorLabel }}
        namespaceSelector: {{ printf "\"kubernetes.io/metadata.name == '%s'\"" (index $config.namespaceSelectorLabel "kubernetes.io/metadata.name") }}
        {{- else if $config.internalNamespace }}
        namespaceSelector: "kubernetes.io/metadata.name == '{{ $namespace }}'"
        {{- end }}
      {{- else }}
      destination: {}
      {{- end }}
  {{- end }}
{{- end }}
{{- end }}

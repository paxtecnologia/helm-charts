name: Delete Draft Releases Manually
on:
  workflow_dispatch:

jobs:
  delete-drafts:
    runs-on: ubuntu-latest
    steps:
      - name: Delete draft releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          # Configura√ß√£o inicial tolerante a falhas
          sudo apt-get update -y
          sudo apt-get install -y jq curl || echo "Depend√™ncias instaladas com warning"

          DELETED_COUNT=0
          PAGE=1
          PER_PAGE=100
          MAX_PAGES=10
          API_URL="https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/releases"

          echo "=== INICIANDO LIMPEZA DE DRAFTS ==="

          while [[ $PAGE -le $MAX_PAGES ]]; do
            echo "üîç Buscando p√°gina $PAGE..."
            
            # Requisi√ß√£o com timeout e tratamento robusto
            RELEASES_JSON=$(curl -sf \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              --connect-timeout 10 \
              "$API_URL?page=$PAGE&per_page=$PER_PAGE") || {
                echo "‚ö†Ô∏è Falha na API ao buscar p√°gina $PAGE"
                break
              }

            # Verifica√ß√£o EXTREMAMENTE robusta do JSON
            if ! jq -e 'if type=="array" then true else false end' <<< "${RELEASES_JSON:-[]}" >/dev/null; then
              echo "‚ÑπÔ∏è Nenhuma release encontrada (p√°gina $PAGE)"
              break
            fi

            # Processamento seguro de drafts
            DRAFT_IDS=$(echo "${RELEASES_JSON:-[]}" | jq -r '.[] | select(.draft==true) | .id' 2>/dev/null || true)

            if [[ -z "$DRAFT_IDS" ]]; then
              echo "‚û°Ô∏è Nenhum draft na p√°gina $PAGE"
              ((PAGE++))
              continue
            fi

            # Dele√ß√£o com verifica√ß√£o expl√≠cita
            for release_id in $DRAFT_IDS; do
              echo "üóëÔ∏è Processando draft ID $release_id..."
              
              RESPONSE=$(curl -sf -X DELETE \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                -w "%{http_code}" \
                -o /dev/null \
                --connect-timeout 10 \
                "$API_URL/$release_id")

              if [[ "${RESPONSE:-}" == "204" ]]; then
                echo "‚úÖ Sucesso ao deletar $release_id"
                ((DELETED_COUNT++))
              else
                echo "‚ùå Falha ao deletar $release_id (status: ${RESPONSE:-unknown})"
              fi
            done

            ((PAGE++))
          done

          echo "=================================="
          echo "üöÄ RESUMO FINAL"
          echo "üìå P√°ginas processadas: $((PAGE-1))"
          echo "üóëÔ∏è Drafts deletados: $DELETED_COUNT"
          echo "=================================="